#! /usr/bin/env bash

# Trace this script
set -x

# Ensure that we are running Bash. Set safe defaults.
set -euo pipefail

exit_handler() {
  if [ "$OPAMROOT" ]; then
    rm -fr "$OPAMROOT"
  fi
  if [ "$CARGO_HOME" ]; then
    rm -fr "$CARGO_HOME"
  fi
  if [ "$RUSTUP_HOME" ]; then
    rm -fr "$RUSTUP_HOME"
  fi
}

trap exit_handler INT TERM QUIT EXIT

# Ensure that we have 'make', and print version debugging info.
make --version

# Ensure that we have 'opam', and print version.
opam --version

# Ensure that we have 'git', too.
git --version

REV="$(git rev-parse --short HEAD)"

# Install Rust and Cargo
export RUSTUP_HOME="$HOME"/mina-rustup-dirs/"$REV"
export CARGO_HOME="$HOME"/mina-cargo-dirs/"$REV"
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y

# Required to add 'rustup' to the PATH, etc.
. "$CARGO_HOME"/env

# Verify that it is available.
rustup --version

# Configure the shell according to the Makefile-prescribed configuration for Opam.
export OPAMROOT="$HOME"/mina-opam-roots/"$REV"
make opam_init
eval "$(opam env)"

# Ensure that we have Ocaml, and its utilities (include Dune), at hand.
command -v ocaml
command -v ocamlopt
command -v dune
ocaml --version
dune --version

# Ensure that we have 'go'.
go version

# Make various targets, in dependency order.
make ocaml_version
make ocaml_word_size
make ocaml_checks
make reformat-diff
make libp2p_helper
make build
