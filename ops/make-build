#! /usr/bin/env bash

# Trace this script
set -x

# Ensure that we are running Bash. Set safe defaults.
set -euo pipefail

exit_handler() {
  if [[ "$OPAMROOT" =~ "$REV" ]]; then
    rm -fr "$OPAMROOT"
  fi
  if [[ "$CARGO_HOME" =~ "$REV" ]]; then
    rm -fr "$CARGO_HOME"
  fi
  if [[ "$RUSTUP_HOME" =~ "$REV" ]]; then
    rm -fr "$RUSTUP_HOME"
  fi
}

trap exit_handler INT TERM QUIT EXIT

# Ensure that we have 'make', and print version debugging info.
make --version

# Ensure that we have 'opam', and print version.
opam --version

# Ensure that we have 'git', too.
git --version

REV="$(git rev-parse --short HEAD)"

# Install Rust and Cargo
: ${RUSTUP_HOME:="$HOME"/mina-rustup-dirs/"$REV"}
: ${CARGO_HOME:="$HOME"/mina-cargo-dirs/"$REV"}
export RUSTUP_HOME CARGO_HOME
make rust_init

# Required to add 'rustup' to the PATH, etc.
. "$CARGO_HOME"/env

# Verify that rustup and cargo are available.
rustup --version
cargo --version

# Configure the shell according to the Makefile-prescribed configuration for Opam.
: ${OPAMROOT:="$HOME"/mina-opam-roots/"$REV"}
export OPAMROOT
make opam_init
eval "$(opam env)"

# Ensure that we have Ocaml, and its utilities (include Dune), at hand.
command -v ocaml
command -v ocamlopt
command -v dune
ocaml --version
dune --version

# Ensure that we have 'go'.
go version

# Make various targets, in dependency order.
make ocaml_version
make ocaml_word_size
make ocaml_checks
make extract_blocks
make reformat-diff
make libp2p_helper
make missing_blocks_auditor
# make build
# make archive_blocks

# Not working:
# make genesis_ledger_from_tsv
